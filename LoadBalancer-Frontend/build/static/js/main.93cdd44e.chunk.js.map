{"version":3,"sources":["assets/westRockLogo.png","components/Header/Location.js","components/Header/UserName.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","centerContainer","display","justify","justifyContent","color","margin","menuButton","padding","Location","classes","React","useState","anchorEl","setAnchorEl","opens","Boolean","handleClose","useEffect","axios","get","then","resData","console","log","data","mills","millName","className","Grid","xs","IconButton","size","clsx","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","onClose","TransitionComponent","Fade","MenuItem","userName","units","language","res","catch","err","userNameStyle","paddingRight","UserName","textAlign","flex","logo","height","marginLeft","appBar","backgroundColor","position","borderBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","button","rightContainer","alignItems","flexDirection","leftContainer","appBarShift","width","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","content","flexGrow","contentShift","quickAccessIconsContainer","paddingTop","borderRight","quickAccessIcons","marginTop","opacity","Header","useTheme","setOpen","AppBar","Toolbar","container","laftContainer","ClickAwayListener","onClickAway","aria-label","edge","Drawer","variant","anchor","paper","direction","Divider","List","ListItem","ListItemIcon","ListItemText","primary","src","alt","location","App","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93cdd44e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/westRockLogo.9606afff.png\";","import React, { useState, useEffect } from 'react';\nimport { Menu, MenuItem, Fade, Grid, IconButton } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport axios from 'axios';\n\nconst url = 'http://ms00015080d:7050/api/userpreferences/fhenao';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    },\n    centerContainer: {\n        display: 'flex',\n        justify: 'center',\n        justifyContent: 'right',\n        color: '#004B87', \n        margin: '0', \n    },\n    menuButton: {\n        margin: '0',\n        padding: '0'\n    },\n}));\n\nconst Location = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const opens = Boolean(anchorEl);\n  // eslint-disable-next-line no-unused-vars\n    const [useMills, setMills] =useState([]);\n    let tempMill = '';\n    \n\n    const handleClick = event => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        axios.get(url)\n        .then(resData => {\n            // tempMill = resData.data.mills[4].millName;\n            console.log(resData.data.mills[3].millName);\n        })\n    }, [tempMill]);\n\n    return(\n        <div className={classes.root}>\n             <Grid xs='4' className={classes.centerContainer}>\n                <IconButton\n                            color=\"inherit\"\n                            size='small'\n                            className={clsx(classes.menuButton )}\n                            aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}\n                        > \n                    <ArrowDropDownIcon color={'primary'}/>\n                    <h4 className={classes.centerContainer}>{tempMill}</h4> \n                </IconButton>\n            </Grid>\n\n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={opens}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Mill One</MenuItem>\n                <MenuItem onClick={handleClose}>Mill Two</MenuItem>\n                <MenuItem onClick={handleClose}>Mill Three</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default Location;","import React from 'react';\nimport { IconButton, Menu, MenuItem, Fade } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst fhenao = 'http://ms00015080d:7050/api/userpreferences/fhenao';\n\nlet userName = '';\nlet units = '';\nlet language = '';\n\naxios.get(fhenao).then((res) => {\n    userName = res.data.userName;\n    units = res.data.units;\n    language = res.data.language;\n})\n    .catch((err) => {\n        console.log(err);\n    })\n    console.log(userName);\n    console.log(units);\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    },\n    userNameStyle: {\n        color: '#004B87',\n        margin:'0',\n        paddingRight: '3vh'\n    },\n}));\n\nexport default function UserName() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const opens = Boolean(anchorEl);\n  \n    const handleClick = event => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n        <div className='classes.root'>\n            <IconButton\n                color=\"inherit\"\n                size=\"small\"\n                aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}\n            >\n                <ArrowDropDownIcon color='primary' />\n                <h5 className={classes.userNameStyle}>{userName}</h5> \n            </IconButton>\n            \n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={opens}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Language:{language}</MenuItem>\n                <MenuItem onClick={handleClose}>Units: {units}</MenuItem>\n            </Menu>\n        </div>\n    )\n}","import React from 'react';\nimport { ClickAwayListener, AppBar, Toolbar, Grid, Divider, Drawer, List, ListItemIcon, ListItemText, ListItem, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport ShutterSpeedIcon from '@material-ui/icons/ShutterSpeed';\nimport EmailIcon from '@material-ui/icons/Email';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport logo from '../../assets/westRockLogo.png';\nimport Location from './Location';\nimport UserName from './UserName';\n\nconst drawerWidth = 290;\n\nconst useStyles = makeStyles(theme => ({\n    root: { \n      textAlign: 'center',\n      display: 'flex'\n    },\n    flex: {\n        display: 'flex'\n    },\n    logo:{\n        margin:'0', \n        height: '30px', \n        padding: '0',\n        marginLeft: '5vh'\n    },\n    appBar:{\n        backgroundColor: \"white\",\n        position: \"fixed\",\n        borderBottom: \"5px solid #ff8200\",\n        height: '7vh',\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    button: {\n        color: \"inherit\"\n    },\n    rightContainer: {\n        alignItems: 'center',\n        display: 'flex',\n        justify: 'center',\n        justifyContent: 'flex-end'\n    },\n    centerContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center', \n    },\n    leftContainer:{\n        display: 'flex',\n        justifyContent:'flex-Start',\n        flexDirection: 'row',\n        justify: 'center'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        margin: '0',\n        padding: '0'\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        position: 'absolute'\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        height: '56%',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n            }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n            }),\n        marginLeft: 0,\n    },\n    quickAccessIconsContainer: {\n        paddingTop: '10vh',\n        borderRight: '2px'\n    },\n    quickAccessIcons: {\n        marginLeft: '2vh',\n        marginTop: '1vh',\n        color: 'gray',\n        opacity: '60%'\n    }\n}));\n\nconst Header = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleClickAway = () => {\n        setOpen(false);\n      };\n \n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appBar}>\n                <Toolbar> \n                    <Grid container>\n\n                        <Grid xs={4} container className={classes.laftContainer}>\n                            <div>\n                                <ClickAwayListener\n                                    onClickAway={handleClickAway}\n                                >\n                                    <IconButton\n                                        color=\"inherit\"\n                                        aria-label=\"open drawer\"\n                                        onClick={handleDrawerOpen}\n                                        edge=\"start\"\n                                        className={clsx(classes.menuButton, open && classes.hide)}\n                                    >\n                                        <MenuIcon color=\"primary\" />\n                                    </IconButton>\n                                </ClickAwayListener>\n                            \n                                <Drawer\n                                    className={classes.drawer}\n                                    variant=\"persistent\"\n                                    anchor=\"left\"\n                                    open={open}\n                                    classes={{ paper: classes.drawerPaper }}\n                                >\n                                    <div className={classes.drawerHeader}>\n                                        <IconButton onClick={handleDrawerClose}>\n                                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                        </IconButton>\n                                    </div>\n                                    <Divider />\n\n                                    <List>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <AccountTreeIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={'Load Planner'} />\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <SettingsIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={'Mill Preferences'} />\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <BarChartIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={'Reports'} />\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <ExtensionIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={'Scenario Builder'} />\n                                        </ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <ShutterSpeedIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={'Som Tester'} />\n                                        </ListItem>\n                                    </List>\n                                    <Divider/>\n                                </Drawer>\n                            </div>\n                            \n                            <img src={logo} alt=\"WestRockLogo\" className={classes.logo}/>\n                        </Grid>\n\n{/* -------------------------------------------Center Container----------------------------------------*/}\n                        <Grid xs='4' className={classes.centerContainer}>\n                            <Location className={classes.location}/>\n                        </Grid>\n{/* -------------------------------------------Right Container---------------------------------------- */}\n                        <Grid xs='4'  className={classes.rightContainer}>    \n\n                            <IconButton\n                                color=\"inherit\"\n                                size=\"small\"\n                            >\n                                <UserName />\n                            </IconButton>\n\n                            <IconButton\n                                color=\"inherit\"\n                                size='small'\n                                className={clsx(classes.menuButton )}\n                            > \n                                <NotificationsIcon color=\"action\"/> \n                            </IconButton>\n                             \n                            <IconButton\n                                color=\"inherit\"\n                                size='small'\n                                className={clsx(classes.menuButton )}\n                            > \n                                <EmailIcon color=\"action\"    />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n\n            {/* ------------------------Icons below header (left) ------------ */}\n            <Grid className={classes.quickAccessIconsContainer}  >\n\n                <Grid spacing='3'>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons )}\n                    > \n                        <AccountTreeIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons )}\n                    > \n                        <SettingsIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons )}\n                    > \n                        <BarChartIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons )}\n                    > \n                        <ExtensionIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons )}\n                    > \n                        <ShutterSpeedIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport Header from './components/Header/Header';\n// import ApiTest from './components/Header/ApiTest';\n\nconst App = () => {\n  return (\n    <div> \n      <Header />\n      {/* <ApiTest /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}