{"version":3,"sources":["components/Location/Location.js","components/UserName/UserName.js","components/Header/Header.js","components/Api/Api.js","components/AppView/AppView.js","App.js","serviceWorker.js","index.js","assets/westRockLogo.png"],"names":["useStyles","makeStyles","theme","root","centerContainer","display","justify","justifyContent","color","margin","menuButton","padding","Location","classes","React","useState","anchorEl","setAnchorEl","opens","Boolean","tempMill","handleClose","useEffect","axios","get","then","resData","data","mills","millName","className","Grid","item","xs","IconButton","size","clsx","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","onClose","TransitionComponent","Fade","MenuItem","userName","units","language","UserName","res","catch","err","textAlign","flex","appBar","backgroundColor","position","borderBottom","height","transition","transitions","create","easing","sharp","duration","leavingScreen","button","rightContainer","alignItems","flexDirection","leftContainer","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","content","flexGrow","contentShift","quickAccessIconsContainer","paddingTop","borderRight","quickAccessIcons","marginTop","opacity","Header","useTheme","setOpen","AppBar","Toolbar","container","ClickAwayListener","onClickAway","aria-label","edge","Drawer","variant","anchor","paper","direction","Divider","List","ListItem","ListItemIcon","ListItemText","primary","src","logo","alt","location","Api","useMills","setMills","loadedMills","key","push","millId","console","log","length","AppView","App","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.991bdaa4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Menu, MenuItem, Fade, Grid, IconButton } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport axios from 'axios';\n\n\nimport './Location.scss'\n\nconst url = 'http://ms00015080d:7050/api/userpreferences/fhenao';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    },\n    centerContainer: {\n        display: 'flex',\n        justify: 'center',\n        justifyContent: 'right',\n        color: '#004B87', \n        margin: '0', \n    },\n    menuButton: {\n        margin: '0',\n        padding: '0'\n    },\n}));\n\nconst Location = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const opens = Boolean(anchorEl);\n// eslint-disable-next-line no-unused-vars\n    const [useMills, setMills] =useState([]);\n    let tempMill = '';\n    \n\n    const handleClick = event => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        axios.get(url)\n        .then(resData => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            tempMill = resData.data.mills[3].millName;\n            // console.log(resData.data.mills[3].millName);\n        })\n    }, [tempMill]);\n\n    return(\n        <div\n          className={classes.root}\n        >\n             <Grid \n               item \n               xs={4} \n               className={classes.centerContainer}\n             > \n                <IconButton\n                  color=\"inherit\"\n                  size='small'\n                  className={clsx(classes.menuButton )}\n                  aria-controls=\"fade-menu\" \n                  aria-haspopup=\"true\" \n                  onClick={handleClick}\n                > \n                    <ArrowDropDownIcon \n                      color={'primary'}\n                    />\n                    <h4 \n                      className={classes.centerContainer}>\n                      {tempMill}\n                    </h4> \n                </IconButton>\n            </Grid>\n\n            <Menu\n              id=\"fade-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={opens}\n              onClose={handleClose}\n              TransitionComponent={Fade}\n            >\n              <MenuItem \n                onClick={handleClose}\n              >\n                Mill One\n              </ MenuItem>\n              <MenuItem \n                onClick={handleClose}\n              >\n                Mill Two\n              </ MenuItem>\n              <MenuItem\n                onClick={handleClose}\n              >\n                Mill Three\n              </ MenuItem>\n            </ Menu>\n        </ div>\n    )\n}\n\nexport default Location;","import React from 'react';\n\nimport { \n  IconButton, \n  Menu, \n  MenuItem\n} from '@material-ui/core';\n\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport axios from 'axios';\n\nimport './UserName.scss'\n\nconst fhenao = 'http://ms00015080d:7050/api/userpreferences/fhenao';\n\nlet userName = '';\nlet units = '';\nlet language = '';\n\naxios.get(fhenao).then((res) => {\n  userName = res.data.userName;\n  units = res.data.units;\n  language = res.data.language;\n})\n  .catch((err) => {\n      // console.log(err);\n  })\n  // console.log(userName);\n  // console.log(units);\n\n\nexport default function UserName() {\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const opens = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n      <div className='root'>\n          <IconButton\n              color='inherit'\n              size='small'\n              aria-controls='fade-menu' \n              aria-haspopup='true' \n              onClick={handleClick}\n          >\n              <ArrowDropDownIcon \n                color='primary' \n              />\n              <h5>\n                {userName}\n              </h5> \n          </IconButton> \n          <Menu\n            keepMounted\n            id='fade-menu'\n            anchorEl={anchorEl}\n            open={opens}\n            onClose={handleClose}\n          >\n              <MenuItem \n                onClick={handleClose}\n                language={language}\n              />\n              <MenuItem \n                onClick={handleClose}\n                units={units}\n              />\n          </ Menu>\n      </div>\n  )\n}","import React from 'react';\n\nimport { \n    ClickAwayListener, \n    AppBar, \n    Toolbar, \n    Grid, \n    Divider, \n    Drawer, \n    List, \n    ListItemIcon, \n    ListItemText, \n    ListItem, \n    IconButton \n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport ShutterSpeedIcon from '@material-ui/icons/ShutterSpeed';\nimport EmailIcon from '@material-ui/icons/Email';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport clsx from 'clsx';\n\nimport logo from '../../assets/westRockLogo.png';\nimport Location from '../Location/Location';\nimport UserName from '../UserName/UserName';\n\nimport './Header.scss'\n\nconst drawerWidth = 290;\n\nconst useStyles = makeStyles(theme => ({\n    root: { \n      textAlign: 'center',\n      display: 'flex'\n    },\n    flex: {\n        display: 'flex'\n    },\n    // logo:{\n    //     margin:'0', \n    //     height: '30px', \n    //     padding: '0',\n    //     marginLeft: '5vh'\n    // },\n    appBar:{\n        backgroundColor: 'white',\n        position: 'fixed',\n        borderBottom: '5px solid #ff8200',\n        height: '7vh',\n        transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    button: {\n        color: 'inherit'\n    },\n    rightContainer: {\n        alignItems: 'center',\n        display: 'flex',\n        justify: 'center',\n        justifyContent: 'flex-end'\n    },\n    centerContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center', \n    },\n    leftContainer:{\n        display: 'flex',\n        justifyContent:'flex-Start',\n        flexDirection: 'row',\n        justify: 'center'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        margin: '0',\n        padding: '0'\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        position: 'absolute'\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        height: '56%',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n            }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n            }),\n        marginLeft: 0,\n    },\n    quickAccessIconsContainer: {\n        paddingTop: '10vh',\n        borderRight: '2px'\n    },\n    quickAccessIcons: {\n        marginLeft: '2vh',\n        marginTop: '1vh',\n        color: 'gray',\n        opacity: '60%'\n    }\n}));\n\nconst Header = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const drawerOpenHandler = () => {\n        setOpen(true);\n    };\n\n    const drawerCloseHandler = () => {\n        setOpen(false);\n    };\n\n    const outsideClickHandler = () => {\n        setOpen(false);\n      };\n \n    return (\n        <div className={classes.root}>\n            <AppBar \n              className={classes.appBar}\n             >\n                <Toolbar> \n                    <Grid \n                     container\n                    >\n                        <Grid\n                         item \n                         xs={4}\n                         className={classes.leftContainer}\n                        >\n                          <div>\n                                <ClickAwayListener\n                                 onClickAway={outsideClickHandler}\n                                >\n                                    <IconButton\n                                     color='inherit'\n                                     aria-label='open drawer'\n                                     onClick={drawerOpenHandler}\n                                     edge='start'\n                                     className={clsx(classes.menuButton, open && classes.hide)}\n                                    >\n                                      <MenuIcon \n                                       color='primary' \n                                      />\n                                    </IconButton>\n                                </ClickAwayListener>\n                                <Drawer\n                                  className={classes.drawer}\n                                  variant='persistent'\n                                  anchor='left'\n                                  open={open}\n                                  classes={{ paper: classes.drawerPaper}}\n                                >\n                                    <div className={classes.drawerHeader}>\n                                        <IconButton \n                                          onClick={drawerCloseHandler}>\n                                          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                                        </IconButton>\n                                    </div>\n                                    <Divider />\n\n                                    <List>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <AccountTreeIcon />\n                                            </ListItemIcon>\n                                            <ListItemText \n                                              primary={'Load Planner'} \n                                            />\n                                        </ ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <SettingsIcon />\n                                            </ ListItemIcon>\n                                            <ListItemText \n                                              primary={'Mill Preferences'} \n                                            />\n                                        </ ListItem>\n                                        <ListItem \n                                          button\n                                        >\n                                            <ListItemIcon>\n                                                <BarChartIcon />\n                                            </ ListItemIcon>\n                                            <ListItemText \n                                              primary={'Reports'} \n                                            />\n                                        </ ListItem>\n                                        <ListItem button>\n                                            <ListItemIcon>\n                                                <ExtensionIcon />\n                                            </ ListItemIcon>\n                                            <ListItemText \n                                              primary={'Scenario Builder'} \n                                            />\n                                        </ ListItem>\n                                        <ListItem \n                                          button>\n                                            <ListItemIcon>\n                                             <ShutterSpeedIcon />\n                                            </ListItemIcon>\n                                            <ListItemText \n                                             primary={'Som Tester'} \n                                            />\n                                        </ ListItem>\n                                    </ List>\n                                    <Divider />\n                                </ Drawer>\n                            </div>  \n                            <img \n                             src={logo} \n                             alt='West Rock Logo' \n                             className='logo'\n                           />\n                        </Grid>\n\n{/* -------------------------------------------Center Container----------------------------------------*/}\n                        <Grid\n                          item \n                          xs={4} \n                          className={classes.centerContainer}\n                        >\n                            <Location \n                             className={classes.location}\n                            />\n                        </Grid>\n{/* -------------------------------------------Right Container---------------------------------------- */}\n                        <Grid \n                          item\n                          xs={4}   \n                          className={classes.rightContainer}\n                        >    \n                            <IconButton\n                             color='inherit'\n                             size='small'\n                            />\n                            <UserName />\n                    \n\n                            <IconButton\n                             color='inherit'\n                             size='small'\n                             className={clsx(classes.menuButton)}\n                            > \n                                <NotificationsIcon \n                                  color='action' \n                                /> \n                            </IconButton>\n                             \n                            <IconButton\n                             color='inherit'\n                             size='small'\n                             className={clsx(classes.menuButton)}\n                            > \n                              <EmailIcon \n                                color='action' \n                              />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n\n            {/* ------------------------Icons below header (left) ------------ */}\n            <Grid \n             className={classes.quickAccessIconsContainer} \n            >\n                <Grid \n                 container\n                 spacing={3}\n                >\n                    <IconButton\n                     size='small'\n                     className={clsx(classes.quickAccessIcons)}\n                    > \n                      <AccountTreeIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                     size='small'\n                     className={clsx(classes.quickAccessIcons)}\n                    > \n                      <SettingsIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons)}\n                    > \n                        <BarChartIcon />\n                    </IconButton>                           \n                </Grid>\n\n                <Grid>\n                    <IconButton\n                        size='small'\n                        className={clsx(classes.quickAccessIcons)}\n                    > \n                     <ExtensionIcon />\n                    </IconButton>\n                </Grid>\n\n                <Grid>\n                    <IconButton\n                      size='small'\n                      className={clsx(classes.quickAccessIcons)}\n                    > \n                      <ShutterSpeedIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Api = () =>  {\r\n    const [useMills, setMills] = useState([]);\r\n    const mills = 'http://ms00015080d:7050/api/userpreferences/fhenao';\r\n    const loadedMills = [];\r\n\r\n    useEffect(() => {\r\n        axios.get(mills)\r\n        .then(resData => {\r\n\r\n            for (const key in resData.data.mills) {\r\n                loadedMills.push({\r\n                    id: resData.data.mills[key].millId,\r\n                })\r\n            }\r\n\r\n            setMills(loadedMills);\r\n            console.log(loadedMills[0]);\r\n            console.log(useMills)\r\n        })\r\n    }, [loadedMills, useMills]);\r\n   \r\n    return (\r\n        <div>\r\n            {useMills.length  <= 0 ? \"loading...\" : \"\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api;","import React from 'react';\nimport Header from '../Header/Header';\nimport Api from '../Api/Api';\n\n\nconst AppView = () => {\n  return (\n    <div> \n      <Header />\n      <Api />\n    </div>\n  );\n}\n\nexport default AppView;\n","import React from 'react';\nimport AppView from './components/AppView/AppView';\n\nimport 'typeface-roboto';\n\n\nconst App = () => {\n  return (\n    <div> \n      <AppView />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/westRockLogo.9606afff.png\";"],"sourceRoot":""}